schema {
  query: Query
  mutation: Mutation
}

directive @hasAuth on FIELD_DEFINITION
directive @inNominationsStage on FIELD_DEFINITION
directive @inVoteStage on FIELD_DEFINITION

type Query {
  years: [AnnualInfo!]
  thisYear: AnnualInfo!
  awards(year: Int!): [Ranking!]
  ballot(year: Int!): [Ballot!]

  nominations(department: Department!): [Nomination!] @inNominationsStage

  ranking(department: Department!): Ranking @inVoteStage
  voter: Voter @inVoteStage @hasAuth
}

type Mutation {
  postNomination(department: Department!, workName: String!): [Nomination!]
    @inNominationsStage
  postBallot(input: BallotInput!): Ballot @inVoteStage @hasAuth
}

type AnnualInfo {
  Year: Int!
  Stage: Stage!
}

enum Stage {
  NotYet
  Nominations
  Vote
  Awards
}

type Voter {
  id: ID!
  name: String!
  ballot(department: Department!): Ballot
  nominations(department: Department!): [Nomination!]
}

type Nomination {
  id: ID!
  department: Department!
  workName: String!
  workID: ID
  work: Work
}

type Work {
  id: ID!
  department: Department!
  nameCN: String!
  nameOrigin: String!
}

input BallotInput {
  department: Department!
  candidates: [WorkRankingInput!]!
}

input WorkRankingInput {
  Ranking: Int!
  WorkID: ID!
}

type Ballot {
  id: ID!
  voterID: ID!
  department: Department!
  candidates: [WorkRanking!]!
}

type Ranking {
  department: Department!
  rankings: [WorkRanking!]
}

type WorkRanking {
  Ranking: Int!
  Work: Work!
}

enum Department {
  TVAnime
  NonTVAnime
  Manga
  Game
  Novel
}
