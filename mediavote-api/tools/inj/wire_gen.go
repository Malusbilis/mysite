// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package inj

import (
	"github.com/nanozuki/crows.moe/mediavote-api/adapter/repository"
	"github.com/nanozuki/crows.moe/mediavote-api/core/service/auth"
	"github.com/nanozuki/crows.moe/mediavote-api/core/service/gql"
	"github.com/nanozuki/crows.moe/mediavote-api/server"
)

// Injectors from wire.go:

func InitServer() (*server.Server, error) {
	repositoryRepository, err := repository.NewRepository()
	if err != nil {
		return nil, err
	}
	resolver, err := gql.NewResolver(repositoryRepository)
	if err != nil {
		return nil, err
	}
	service := &auth.Service{
		Repository: repositoryRepository,
	}
	serverServer := &server.Server{
		Resolver:    resolver,
		AuthService: service,
	}
	return serverServer, nil
}

func InitAuthService() (*auth.Service, error) {
	repositoryRepository, err := repository.NewRepository()
	if err != nil {
		return nil, err
	}
	service := &auth.Service{
		Repository: repositoryRepository,
	}
	return service, nil
}

func InitGqlResolver() (*gql.Resolver, error) {
	repositoryRepository, err := repository.NewRepository()
	if err != nil {
		return nil, err
	}
	resolver := &gql.Resolver{
		Repository: repositoryRepository,
	}
	return resolver, nil
}
