name: Build And Deploy Services

on:
  push:
    branches:
      - "master"

env:
  PROJECT_ID: crows-moe
  LOCATION: asia-east1
  IMAGE_LOCATION: "asia-east1-docker.pkg.dev/crows-moe/images"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
          token_format: "access_token"

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v2"
        with:
          registry: "${{ env.LOCATION }}-docker.pkg.dev"
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: Set service tag from datetime
        run: echo "TAG=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: build blog
        run: |-
          docker build --platform=linux/amd64 -t "${{ env.IMAGE_LOCATION }}/blog:${{ env.TAG }}" service/blog
          docker push "${{ env.IMAGE_LOCATION }}/blog:${{ env.TAG }}"

      - name: build mediavote-api
        run: |-
          docker build --platform=linux/amd64 -t "${{ env.IMAGE_LOCATION }}/mediavote-api:${{ env.TAG }}" service/mediavote-api
          docker push "${{ env.IMAGE_LOCATION }}/mediavote-api:${{ env.TAG }}"

      - name: build mediavote-web
        run: |-
          docker build --platform=linux/amd64 -t "${{ env.IMAGE_LOCATION }}/mediavote-web:${{ env.TAG }}" service/mediavote-web
          docker push "${{ env.IMAGE_LOCATION }}/mediavote-web:${{ env.TAG }}"

      - name: build urldbot
        run: |-
          docker build --platform=linux/amd64 -t "${{ env.IMAGE_LOCATION }}/urldbot:${{ env.TAG }}" service/urldbot
          docker push "${{ env.IMAGE_LOCATION }}/urldbot:${{ env.TAG }}"
    outputs:
      tag: ${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Make Variables
        run: |-
          echo '{"deploy_tag":"${{ env.TAG }}",' > deploy.auto.tfvars.json
          echo '"urldbot_token":"${{ env.URLDBOT_TOKEN }}"}' > deploy.auto.tfvars.json
        env:
          TAG: ${{needs.build.outputs.tag}}
          URLDBOT_TOKEN: ${{ secrets.URLDBOT_TOKEN }}

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve
